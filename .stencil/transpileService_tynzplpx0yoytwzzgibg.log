{"moduleFile":{"sourceFilePath":"/home/chris/wallet/src/components/wallet/events/componentWillLoad.ts","jsFilePath":"/home/chris/wallet/src/components/wallet/events/componentWillLoad.js","cmps":[],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@services/error","@services/storage","stellar-sdk"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomPropOrAttr":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["stellar-sdk","@services/error","@services/storage"],"potentialCmpRefs":[],"staticSourceFile":null,"staticSourceFileText":""},"jsText":"import { Server } from \"stellar-sdk\";\r\nimport { handleError } from \"@services/error\";\r\nimport { get } from \"@services/storage\";\r\nexport default async function componentWillLoad() {\r\n    try {\r\n        let keystore = await get(\"keyStore\");\r\n        this.error = null;\r\n        this.server = new Server(\"https://horizon-testnet.stellar.org\");\r\n        if (keystore) {\r\n            keystore = atob(keystore);\r\n            const { publicKey } = JSON.parse(atob(JSON.parse(keystore).adata));\r\n            this.account = {\r\n                publicKey,\r\n                keystore,\r\n            };\r\n            this.updateAccount();\r\n        }\r\n    }\r\n    catch (err) {\r\n        this.error = handleError(err);\r\n    }\r\n}\r\n"}